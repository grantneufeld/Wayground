<%
# requires @ballots, @election, @user
ballots ||= @ballots
election ||= @election
level ||= @level || election.level
user ||= @user

content_for(:head) do
  %><link rel="profile" href="http://microformats.org/profile/hcard" />
<link rel="alternate" href="<%= level_election_ballots_path(level, election, format: 'csv') %>" type="text/csv" title="Comma-separated data table" />
<%
end


%><%= render 'elections/breadcrumb', { election: election } %>
<h1>Ballots for <%= election.name %><%
if election.end_on %>
<br /><%= election.end_on.to_datetime.to_s(:plain_date) %><%
end %></h1>

<%
section_links = []
section = nil
section_counter = 0
@ballots.each do |ballot|
  if ballot.section != section
    section = ballot.section
    section_counter += 1
    if section_counter > 1
      section_links << link_to(section, "#ballot-section-#{section_counter}")
    end
  end
end    
if ballots.count > 5 && ballots.first.section.blank?
  # we have a lot of uncategorized ballots, make a table of contents for them
  ballots.each do |ballot|
    section_links << link_to(ballot.descriptor, "#ballot-#{ballot.office.filename}", { class: 'nowrap' })
  end
end
if section_links.size > 0
  %><p>(Skip to <%= safe_join(section_links, ', ') %>.)</p>
<%
end

%>
<p><%= link_to 'Download in CSV format', level_election_ballots_path(level, election, format: 'csv'), type: 'text/csv', class: 'download' %> (usable by spreadsheet software and databases).</p>
<p>This is a summary of candidate information. Select an individual candidateâ€™s name for more details.</p>
<%

section = nil
section_counter = 0
@ballots.each do |ballot|
  if ballot.section != section
    section = ballot.section
    section_counter += 1
    %><h1 id="ballot-section-<%= section_counter %>" class="section-heading"><%= section %></h1>
<%
  end
  %><h2><%= link_to ballot.descriptor, ballot.items_for_path, { name: "ballot-#{ballot.office.filename}" } %></h2>
<%
  ballot.candidates.running.each do |candidate|
    %><%= render 'candidates/candidate_brief', { candidate: candidate, user: user } %><%
  end
end

if user && user.authority_for_area(Ballot.authority_area, :can_create)
  add_submenu_item(title: "New Ballot",
    path: new_level_election_ballot_path(level, election)
  )
end

-%>
