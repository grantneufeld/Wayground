#!/bin/sh
#
# preflight.sh - Pre-flighting a Ruby on Rails project before a version commit.
#
# Requirements:
# * git
# * Ruby Gems
# - rspec
# - cucumber
# - simple_cov
# - brakeman
# - bundle-audit
# - rails_best_practices
# - rubocop
# - rubycritic (reek, flay, flog)
# * Rails Tasks
# - notes
# - stats
#
# simple_cov needs to be configured to generate the reports/coverage/percentage.txt file,
# which will just have the numeric percentage result.

# checking for changes
gs="$(git status | tail -n 1)"
if echo $gs | grep --quiet "^nothing to commit" ; then
  # no uncommitted changes - so nothing to commit
  echo "Nothing to commit."
  exit 2
fi

echo "Running test suites..."
bundle exec rspec --format progress --color --profile --order random --fail-fast
bundle exec rake cucumber

# the following requires simple_cov to be configured to generate the reports/coverage/percentage.txt file.
if cat reports/coverage/percentage.txt | grep --quiet "^100\.0*$" ; then
  # we have 100% coverage
  echo ""
else
  # we have < 100% coverage:
  echo "Incomplete code test coverage ($(cat reports/coverage/percentage.txt)%)."
  open reports/coverage/index.html
  exit 1
fi

# report on possible code security issues
echo "Auditing bundle for missing security patches..."
bundle exec bundle-audit
echo ""
echo "Generating Brakeman report..."
bundle exec brakeman --quiet --output reports/brakeman.html --message-limit 255 --routes --separate-models --confidence-level 1
echo ""

# reports on the code quality and activity
echo "Generating Rails Best Practices report..."
bundle exec rails_best_practices --format html --with-textmate --spec --features --output-file reports/rails_best_practices.html
echo ""
echo "Generating rubocop report..."
bundle exec rubocop --config config/rubocop.yml --format simple --out reports/rubocop.txt
echo ""
echo "Generating rubycritic report (flay, flog, reek)..."
bundle exec rubycritic --path reports/rubycritic --no-browser app bin config lib spec
echo ""

# other information about the code
echo "Extracting notes embedded in the code..."
bundle exec rails notes > reports/notes.txt
echo ""
echo "Generating stats report..."
bundle exec rails stats > reports/stats.txt
echo ""

echo "Please review the reports found in the project's 'reports' directory."
open reports
echo ""

# report the git status
echo "Checking version control status..."
git status
echo ""
if echo $gs | grep --quiet "^no changes added to commit" ; then
  # there are changes, but none have been staged for version control
  echo "Nothing has been staged for commit. Please use 'git add <path>' to stage files for commit."
  exit 3
else
  # there are files to commit
  echo "Ready for commit ('git commit')."
  echo "Use 'git add <path>', first, if you want to add additional files for the commit."
fi
