#!/bin/sh
#
# preflight.sh - Pre-flighting a Ruby on Rails project before a version commit.
#
# Requirements:
# * git
# * Ruby Gems
# - rspec
# - cucumber
# - simple_cov
# - brakeman
# - bundle-audit
# - cane
# - churn
# - flay (+ rake task)
# - flog
# - rake notes
# - rails_best_practices
# - reek
# - roodi
# - rake stats
# - tailor
#
# simple_cov needs to be configured to generate the reports/coverage/percentage.txt file,
# which will just have the numeric percentage result.

# script argument flag for restricting to files not committed in git
gitOnly=false
if [ $1 ] ; then
  if [ $1 == "--git" ] ; then
    gitOnly=true
  fi
fi

# checking for changes
gs="$(git status | tail -n 1)"
if echo $gs | grep --quiet "^nothing to commit" ; then
  # no uncommitted changes - so nothing to commit
  echo "Nothing to commit."
  exit 2
fi

echo "Running test suites..."
bundle exec rspec --format progress --color --profile --order random --fail-fast
bundle exec rake cucumber

# the following requires simple_cov to be configured to generate the reports/coverage/percentage.txt file.
if cat reports/coverage/percentage.txt | grep --quiet "^100\.0*$" ; then
  # we have 100% coverage
  echo ""
else
  # we have < 100% coverage:
  echo "Incomplete code test coverage ($(cat reports/coverage/percentage.txt)%)."
  open reports/coverage/index.html
  exit 1
fi

# report on possible code security issues
echo "Auditing bundle for missing security patches..."
bundle exec bundle-audit
echo ""

# report on the code quality
if [ $gitOnly == true ] ; then
  echo "Generating Metriknit merged report (restricted to files uncommitted in git)..."
  bundle exec metriknit --git-only --progress --format html reports/metriknit.html
else
  echo "Generating Metriknit merged report..."
  bundle exec metriknit --progress --format html reports/metriknit.html
fi
echo ""
echo "Generating flay reports..."
bundle exec rake flay:app > reports/flay-app.txt
bundle exec rake flay:spec > reports/flay-spec.txt
bundle exec rake flay:features > reports/flay-features.txt
echo ""
echo "Generating stats report..."
bundle exec rake stats > reports/stats.txt
echo ""

echo "Please review the reports found in the project's 'reports' directory."
open reports
echo ""

# report the git status
echo "Checking version control status..."
git status
echo ""
if echo $gs | grep --quiet "^no changes added to commit" ; then
  # there are changes, but none have been staged for version control
  echo "Nothing has been staged for commit. Please use 'git add <path>' to stage files for commit."
  exit 3
else
  # there are files to commit
  echo "Ready for commit ('git commit')."
  echo "Use 'git add <path>', first, if you want to add additional files for the commit."
fi
