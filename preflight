#!/bin/sh
#
# preflight.sh - Pre-flighting a Ruby on Rails project before a version commit.
#
# Requirements:
# * git
# * Ruby Gems
# - rspec
# - cucumber
# - simple_cov
# - brakeman
# - bundle-audit
# - cane
# - churn
# - flay (+ rake task)
# - flog
# - rake notes
# - rails_best_practices
# - reek
# - roodi
# - rake stats
# - tailor
#
# simple_cov needs to be configured to generate the reports/coverage/percentage.txt file,
# which will just have the numeric percentage result.

# checking for changes
gs="$(git status | tail -n 1)"
if echo $gs | grep --quiet "^nothing to commit" ; then
  # no uncommitted changes - so nothing to commit
  echo "Nothing to commit."
  exit 2
fi

echo "Running test suites..."
bundle exec rspec --format progress --color --profile --order random --fail-fast
bundle exec rake cucumber

# the following requires simple_cov to be configured to generate the reports/coverage/percentage.txt file.
if cat reports/coverage/percentage.txt | grep --quiet "^100\.0*$" ; then
  # we have 100% coverage
  echo ""
else
  # we have < 100% coverage:
  echo "Incomplete code test coverage ($(cat reports/coverage/percentage.txt)%)."
  open reports/coverage/index.html
  exit 1
fi

# report on possible code security issues
echo "Auditing bundle for missing security patches..."
bundle exec bundle-audit
echo ""
echo "Generating Brakeman report..."
bundle exec brakeman --quiet --output reports/brakeman.html --message-limit 255 --routes --separate-models --confidence-level 1
echo ""

# report on the code quality
echo "Generating cane report..."
bundle exec cane --style-measure 110 --parallel > reports/cane.txt
echo ""
echo "Generating churn report..."
bundle exec churn --start_date=2013-01-01 --ignore_files="Gemfile,Gemfile.lock,config/routes.rb,db/schema.rb,preflight,spec/factories.rb,README.rdoc" > reports/churn.txt
echo ""
echo "Generating flay reports..."
bundle exec rake flay:app > reports/flay-app.txt
bundle exec rake flay:spec > reports/flay-spec.txt
bundle exec rake flay:features > reports/flay-features.txt
echo ""
echo "Generating flog report..."
bundle exec flog --group --details --continue --19 app > reports/flog.txt
echo ""
echo "Extracting notes embedded in the code..."
bundle exec rake notes > reports/notes.txt
echo ""
echo "Generating Rails Best Practices report..."
bundle exec rails_best_practices --format html --with-textmate --spec --features --output-file reports/rails_best_practices.html
echo ""
echo "Generating reek report..."
bundle exec reek --quiet --config config/reek.yml app/controllers app/models app/helpers app/processors lib > reports/reek.txt
echo ""
echo "Generating roodi report..."
bundle exec roodi "app/**/*.rb" "lib/**/*.rb" > reports/roodi.txt
echo ""
echo "Generating stats report..."
bundle exec rake stats > reports/stats.txt
echo ""
echo "Generating tailor report..."
bundle exec tailor --max-line-length 110 --max-code-lines-in-class 200 --max-code-lines-in-method 15 --no-color app/**/*.rb > reports/tailor.txt
bundle exec tailor --max-line-length 110 --max-code-lines-in-class 200 --max-code-lines-in-method 15 --no-color lib/**/*.rb >> reports/tailor.txt
echo ""

echo "Please review the reports found in the project's 'reports' directory."
open reports
echo ""

# report the git status
echo "Checking version control status..."
git status
echo ""
if echo $gs | grep --quiet "^no changes added to commit" ; then
  # there are changes, but none have been staged for version control
  echo "Nothing has been staged for commit. Please use 'git add <path>' to stage files for commit."
  exit 3
else
  # there are files to commit
  echo "Ready for commit ('git commit')."
  echo "Use 'git add <path>', first, if you want to add additional files for the commit."
fi
